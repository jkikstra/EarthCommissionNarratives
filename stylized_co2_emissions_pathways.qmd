---
title: "Visualising tipping risk (EarthCommission phase 2)"
author: "Jarmo S. Kikstra"
format: html
editor: visual
---

```{r}
library("here")
library("tidyverse")
library("vroom")
library("readxl")
library("patchwork")
library("ggthemes")
library("ggsci")
library("testthat")
# library("geomtextpath")
library("stringr")
library("ggthemes")

here::i_am("EarthCommissionNarratives.Rproj")

source(here("utils.R"))


```

# Making Emissions Pathways

### Define emissions points
```{r}



co2.2015 <- 40.2
co2.2016 <- 39.1
co2.2017 <- 39.5
co2.2018 <- 39.8
co2.2019 <- 39.8
co2.2020 <- 37.8
co2.2021 <- 39.9
co2.2022 <- 39.8

co2.historical.years <- seq(2015,2022)
co2.historical <- c(co2.2015,co2.2016,co2.2017,co2.2018,co2.2019,co2.2020,co2.2021,co2.2022)

co2.2025 <- 40 # guesstimate

emissions.definitions <- tibble(
  scenario = c(
    rep(
      c("OH", "ER", "3S", "WW"),
      times = c(6,5,6,6) + length(co2.historical.years)
    )
  ),
  year = c(
    # assume for all pathways that 1/3 on the way to net-zero CO2, we reach 50% reductions
    c(co2.historical.years, 2025, round(2025+40/3), 2065, 2070, 2100, 2150), # OH
    c(co2.historical.years, 2025, round(2025+45/3), 2070, 2100, 2150), # ER
    c(co2.historical.years, 2025, round(2025+25/3), 2050, 2070, 2100, 2150), # 3S
    c(co2.historical.years, 2025, round(2025+30/3), 2055, 2070, 2100, 2150) # WW
  ),
  co2.total = c(
    c(co2.historical, co2.2025, co2.2025/2, 0, -2, -10, -20), # OH
    c(co2.historical, co2.2025, co2.2025/2, 0, -10, -30), # ER
    c(co2.historical, co2.2025, co2.2025/2, 0, -5, -5, -5), # 3S
    c(co2.historical, co2.2025, co2.2025/2, 0, -5, -10, -10) # WW
  )
)
```

### Quick visual
```{r}

# quick visual
p.plot.co2.emissions.definitions <- ggplot(
  emissions.definitions,
  aes(x=year, y=co2.total)
) +
  mark_history(sy = 2025) +
  annotate("rect", xmin=2100, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.2, fill="red", colour=NA) +
  geom_vline(xintercept=2100, linetype="dotted") +
  geom_line(
    aes(
      group=interaction(scenario),
      colour = scenario, 
      linetype = scenario
    ),
    linewidth=1.2
  ) +
  theme_jsk() +
  scale_colour_jco() +
  labs(
    title = "Sketched CO2 pathways",
    caption = "Post-2100 is indicative; not used in further modelling.",
    y = "Gt CO2/yr"
  )

p.plot.co2.emissions.definitions

save_ggplot(f = here("figures", "co2_sketch"),
       p = p.plot.co2.emissions.definitions,
       h = 125,
       w = 125)

```
### To IAMC format
```{r}
# library for interpolation
library(zoo)

# IAMC format (long)
emissions.iamc <- emissions.definitions %>% 
  mutate(model="EarthCommissionStylized",
         region="World",
         variable="Emissions|CO2",
         value=co2.total*1e3,
         unit="Mt CO2/yr") %>% 
  select(model,scenario,region,variable,unit,year,value) %>% 
  arrange(model,scenario,region,variable,unit,year,value)
emissions.iamc.wide <- emissions.iamc %>% 
  iamc_long_to_wide() %>% wide_sort_columns()

# Function to expand and interpolate each group
expand_and_interpolate <- function(df, full_years = 2015:2150) {
  # Expand to full range of years
  df_full <- data.frame(year = full_years) %>%
    left_join(df, by = "year") %>%
    arrange(year)
  
  # Interpolate missing values
  df_full$value <- na.approx(df_full$value, df_full$year, rule = 2)
  
  return(df_full)
}

interpolated.data <- emissions.iamc %>% # interpolate within groups
    complete(model, scenario, region, variable, unit, year = 2015:2150) %>%  # Ensure all combinations exist
    group_by(model, scenario, region, variable, unit) %>%
    group_modify(~ expand_and_interpolate(.x)) %>%
    ungroup()

interpolated.data.wide <- interpolated.data %>% 
  iamc_long_to_wide() %>% wide_sort_columns()


# write out
write_delim(x = interpolated.data,
            file = here("data", "emissions", "emissions_iamc_not_interpolated_long.csv"),
            delim = ",")

write_delim(x = interpolated.data.wide,
            file = here("data", "emissions", "emissions_iamc_not_interpolated.csv"),
            delim = ",")
```

# Infilling & Climate run

Note: this happens right now using the AR6 infilling pipeline.
In the future we can do this more explicitly if we want to.

```{r}

climate <- load_excel_iamc(file_path = here("data", "climate", "emissions_iamc_not_interpolated_emptysulfur_alloutput.xlsx")) %>% 
  iamc_wide_to_long(upper.to.lower = T)

climate_extended <- load_excel_iamc(file_path = here("data", "climate", "emissions_iamc_not_interpolated_emptysulfur_alloutput_linearlyextended_p50.xlsx")) %>% 
  iamc_wide_to_long(upper.to.lower = T)

```


# Tipping risk functions

Using Table 1 of https://www.science.org/doi/10.1126/science.abn7950

```{r}
simple_linear_interpolation_function <- function(t, mi, ma, be){
  if (t==be){
      return(0.5)
    } else if (t<mi){
      return(0)
    } else if (t>ma){
      return(1)
    } else if (t>=mi & t<be){
      diff <- t - mi
      full_diff <- be - mi
      return(
        diff/full_diff * 0.5
      )
    } else if (t<=ma & t>be){
      diff <- t - be
      full_diff <- ma - be
      return(
        0.5 + diff/full_diff * 0.5
      )
    }
}
GMT_to_TR <- function(temp, tipping_element){
  tipping_element_list <- c("GrIS",
                            "WAIS",
                            "LABC",
                            "AMAZ",
                            "PFTP",
                            "AMOC",
                            "REEF",
                            "PFAT",
                            "BARI")
  if (tipping_element%nin%tipping_element_list){
    stop("Tipping element not encoded in our list.")
  }
  if (tipping_element=="GrIS"){
    minimum <- 0.8
    maximum <- 3.0
    best_estimate <- 1.5
  }
  if (tipping_element=="WAIS"){
    minimum <- 1.0
    maximum <- 3.0
    best_estimate <- 1.5
  }
  if (tipping_element=="LABC"){
    # labrador SPG convection collapse
    minimum <- 1.1
    maximum <- 3.8
    best_estimate <- 1.8
  }
  if (tipping_element=="AMAZ"){
    minimum <- 2.0
    maximum <- 6.0
    best_estimate <- 3.5
  }
  if (tipping_element=="PFTP"){
    minimum <- 3.0
    maximum <- 5.0
    best_estimate <- 4.0
  }
  if (tipping_element=="AMOC"){
    minimum <- 1.4
    maximum <- 8.0
    best_estimate <- 4.0
  }
  if (tipping_element=="REEF"){
    minimum <- 1.0
    maximum <- 2.0
    best_estimate <- 1.5
  }
  if (tipping_element=="PFAT"){
    # boreal permafrost abrupt thaw
    minimum <- 1.0
    maximum <- 2.3
    best_estimate <- 1.5
  }
  if (tipping_element=="BARI"){
    # barentz sea ice
    minimum <- 1.5
    maximum <- 1.7
    best_estimate <- 1.6
  }
  
  # others.... could be added if taking climate uncertainty into account (otherwise not above 2C so zero tipping risk)
  
  tipping_risk <- simple_linear_interpolation_function(
      t = temp,
      mi = minimum,
      ma = maximum,
      be = best_estimate
    )
  
  return(tipping_risk)
}

GMT_to_TR <- Vectorize(GMT_to_TR)


```


# Visualise 

### Emissions (CO2) 
```{r}

# ...

```

### Temperature
```{r}

# real data
p.temp <- ggplot(climate %>% filter(variable%in%c(
  "AR6 climate diagnostics|Surface Temperature (GSAT)|MAGICCv7.5.3|50.0th Percentile",
  "AR6 climate diagnostics|Surface Temperature (GSAT)|MAGICCv7.5.3|33.0th Percentile",
  "AR6 climate diagnostics|Surface Temperature (GSAT)|MAGICCv7.5.3|67.0th Percentile"
)) %>% 
  remove_variable_firstlevel_match("AR6 climate diagnostics") %>%
  remove_variable_firstlevel_match("Surface Temperature \\(GSAT\\)") %>%
  remove_variable_firstlevel_match("MAGICCv7.5.3") %>%
  mutate(variable = paste0("GSAT (", variable, ")")) %>% 
  pivot_wider(names_from = variable, values_from = value),
aes(x=year)) +
  mark_history(sy = 2025) +
  annotate("rect", xmin=2100, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.2, fill="red", colour=NA) +
  geom_vline(xintercept=2100, linetype="dotted") +
  geom_ribbon(
    aes(ymin = `GSAT (67.0th Percentile)`, 
        ymax = `GSAT (33.0th Percentile)`,
        fill = scenario),
    alpha=0.1
  ) +
  geom_line(
    aes(y = `GSAT (50.0th Percentile)`,
        colour = scenario),
    linewidth=1.1
  ) +
  # add desired extension of temperature until 2150
  geom_line(
    data = climate_extended,
    aes(y = value,
        colour = scenario),
    linewidth = 1,
    linetype = "dashed"
  ) +
  theme_jsk() +
  scale_colour_jco() +
  scale_fill_jco() +
  scale_y_continuous(limits = c(0,2)) +
  labs(title = "Temperature",
       subtitle = "33-67th percentile range",
       caption = "Produced with AR6 climate emulator")

p.temp

save_ggplot(f = here("figures", "temp_magicc"),
       p = p.temp,
       h = 125,
       w = 125)
```

### Tipping risk: Data
```{r}
# until 2150
tr <- climate_extended %>% 
  mutate(
    AMOC = GMT_to_TR(temp = value, tipping_element = "AMOC"),
    Greenland = GMT_to_TR(temp = value, tipping_element = "GrIS"),
    `West Antarctica` = GMT_to_TR(temp = value, tipping_element = "GrIS"),
    `Coral Reefs` = GMT_to_TR(temp = value, tipping_element = "REEF"),
    `Amazon` = GMT_to_TR(temp = value, tipping_element = "AMAZ"),
    `Permafrost Thaw` = GMT_to_TR(temp = value, tipping_element = "PFAT")
  ) %>% 
  select(-value,-unit) %>% 
  pivot_longer(cols = AMOC:`Permafrost Thaw`,
               names_to = "Tipping Element",
               values_to = "Tipping Risk (%)")

tr
```

### Tipping risk: Plots
```{r}

p.tipping <- ggplot(tr, aes(x=year, y=`Tipping Risk (%)`)) +
  facet_grid(~`Tipping Element`) +
  mark_history(sy = 2025) +
  annotate("rect", xmin=2100, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.2, fill="red", colour=NA) +
  geom_vline(xintercept=2100, linetype="dotted") +
  geom_line(aes(colour=scenario)) +
  theme_jsk() +
  scale_colour_jco() +
  scale_fill_jco() +
  scale_y_continuous(limits = c(0,1), expand = c(0,0)) +
  labs(title = "Tipping Risk",
       subtitle = "Using median temperature and Armstrong McKay et al. (2022), Science")

p.tipping

save_ggplot(f = here("figures", "tipping_risk"),
       p = p.tipping,
       h = 125,
       w = 250)
```
